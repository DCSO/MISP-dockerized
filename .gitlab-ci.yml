image: docker:latest

services:
  - docker:dind

stages:
- build
- scan
- deploy

variables:
  # The following variables are setup via gitlab project group:
    # DOCKER_SLUG
    # DOCKER_USERNAME
    # DOCKER_PASSWORD
    # CUSTOM_REGISTRY_URL
    # CUSTOM_REGISTRY_USER
    # CUSTOM_REGISTRY_PW
  # Set via Job:
    # CURRENT_VERSION
  DOCKER_DRIVER: overlay2

before_script:
# Include Variables
- source .ci/00_vars.sh
# Install dependencies
- .ci/01_before_install.sh

# On all other pull requests and branches exclude dev and master: Build Environment, but do nothing more. No tests. Tests with our Test Framework are only done in the dev branch.
.env_test_only:
  stage: build
  except:
  - master
  - dev
  - feat/1.1.0
  script:
  - make -C .ci script REPOURL=$CUSTOM_REGISTRY_URL USER=$CUSTOM_REGISTRY_USER PW=$CUSTOM_REGISTRY_PW TEST=no_test VERSION=$CURRENT_VERSION
  # Clean Up
  - echo "##### clean up..." &&  make -C $FOLDER delete

.env_test_only_hub.docker.com:
  stage: build
  except:
  - master
  - dev
  - feat/1.1.0
  script:
  - make -C .ci script REPOURL=$DOCKER_SLUG USER=$DOCKER_USERNAME PW=$DOCKER_PASSWORD TEST=no_test VERSION=$CURRENT_VERSION
  # Clean Up
  - echo "##### clean up..." &&  make -C $FOLDER delete

# On dev Branch: Build Environment and Test it with our own Test Framework
.long_test:
  stage: build
  only:
  - dev
  - feat/1.1.0
  allow_failure: true
  script:
  - make -C .ci script REPOURL=$CUSTOM_REGISTRY_URL USER=$CUSTOM_REGISTRY_USER PW=$CUSTOM_REGISTRY_PW TEST=long_test VERSION=$CURRENT_VERSION
  # Clean Up
  - echo "##### clean up..." &&  make -C $FOLDER delete
  # https://docs.gitlab.com/ee/ci/yaml/README.html#artifacts-reports
  artifacts:
    paths: 
    - ./current/.travis/reports/*.xml
    reports:
      junit: ./current/.travis/reports/*.xml

# On dev Branch: Build Environment and Test it with our own Test Framework
.long_test_hub.docker.com:
  stage: build
  only:
  - dev
  - feat/1.1.0
  script:
  - make -C .ci script REPOURL=$DOCKER_SLUG USER=$DOCKER_USERNAME PW=$DOCKER_PASSWORD TEST=long_test VERSION=$CURRENT_VERSION
  # Clean Up
  - echo "##### clean up..." &&  make -C $FOLDER delete
  # https://docs.gitlab.com/ee/ci/yaml/README.html#artifacts-reports
  artifacts:
    paths: 
    - ./current/.travis/reports/*.xml
    reports:
      junit: ./current/.travis/reports/*.xml


# On MASTER Branch: Build Environment + retag Images to remove "-dev" tag
.push_productive_images:
  stage: deploy
  only: 
  - master
  - schedules
  script:
  # Check internal Registry
    # Test
  - make -C .ci script REPOURL=$CUSTOM_REGISTRY_URL USER=$CUSTOM_REGISTRY_USER PW=$CUSTOM_REGISTRY_PW TEST=long_test VERSION=$CURRENT_VERSION
    # Push
  - make -C .ci push REPOURL=$CUSTOM_REGISTRY_URL USER=$CUSTOM_REGISTRY_USER PW=$CUSTOM_REGISTRY_PW TEST=long_test VERSION=$CURRENT_VERSION
    # Clean Up
  - echo "##### clean up..." &&  make -C $FOLDER delete
  # https://docs.gitlab.com/ee/ci/yaml/README.html#artifacts-reports
  artifacts:
    paths: 
    - ./current/.travis/reports/*.xml
    reports:
      junit: ./current/.travis/reports/*.xml

.push_productive_images_hub.docker.com:
  stage: deploy
  only: 
  - master
  - schedules
  script:
  # Check hub.docker.com Registry
    # Test
  - make -C .ci  REPOURL=$DOCKER_SLUG USER=$DOCKER_USERNAME PW=$DOCKER_PASSWORD TEST=long_test VERSION=$CURRENT_VERSION
    # Push 
  - bash .ci/30_push_2_registry.sh $DOCKER_SLUG $DOCKER_USERNAME $DOCKER_PASSWORD
    # Clean Up
  - echo "##### clean up..." &&  make -C $FOLDER delete
  # https://docs.gitlab.com/ee/ci/yaml/README.html#artifacts-reports
  artifacts:
    paths: 
    - ./current/.travis/reports/*.xml
    reports:
      junit: ./current/.travis/reports/*.xml

# deactivated:
# https://docs.gitlab.com/ee/ci/examples/container_scanning.html
# https://docs.gitlab.com/ee/ci/yaml/README.html#artifactsreportscontainer_scanning
# https://docs.gitlab.com/ee/user/project/merge_requests/container_scanning.html
# https://docs.gitlab.com/ee/ci/yaml/#artifactsreportscontainer_scanning-ultimate

.container_scanning:
  stage: scan
  #image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
    ## Define two new variables based on GitLab's CI/CD predefined variables
    ## https://docs.gitlab.com/ee/ci/variables/#predefined-variables-environment-variables
    CI_CONTAINER_NAME: misp-dockerized-server
    CI_APPLICATION_REPOSITORY: $INTERNAL_REGISTRY_HOST/$CI_CONTAINER_NAME
    CI_APPLICATION_TAG: latest-dev
  allow_failure: true
  #services:
  #  - docker:stable-dind
  script:
    - echo "$INTERNAL_REGISTRY_PW"| docker login -u "$INTERNAL_REGISTRY_USER" "$INTERNAL_REGISTRY_HOST" --password-stdin
    - docker run -d --name db arminc/clair-db:latest
    - docker run -p 6060:6060 --link db:postgres -d --name clair --restart on-failure arminc/clair-local-scan:v2.0.1
    - docker ps
    - apk add -U wget ca-certificates
    - docker pull ${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG}
    - wget https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64
    - mv clair-scanner_linux_amd64 clair-scanner
    - chmod +x clair-scanner
    - touch clair-whitelist.yml
    #- while( ! wget -q -O /dev/null http://localhost:6060/v1/namespaces ) ; do sleep 1 ; done
    #- retries=0
    - docker ps -a
    - echo "Waiting for clair daemon to start"
    - bash -c 'while( ! wget -T 10 -q -O /dev/null http://localhost:6060/v1/namespaces ) ; do sleep 1 ; echo -n "." ; if [ $retries -eq 10 ] ; then echo " Timeout, aborting." ; exit 1 ; fi ; retries=$(($retries+1)) ; done'
    - bash -c ''./clair-scanner -c http://localhost:6060 --ip $(hostname -i) -r gl-container-scanning-report.json -l clair.log -w clair-whitelist.yml ${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG} || true'
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json


include:
  #- '0.1.0/.gitlab-ci.yml'
  #- '0.1.1/.gitlab-ci.yml'
  #- '0.1.2/.gitlab-ci.yml'
  #- '0.2.0/.gitlab-ci.yml'
  #- '0.3.0/.gitlab-ci.yml'
  #- '0.3.1/.gitlab-ci.yml'
  #- '0.3.2/.gitlab-ci.yml'
  #- '0.3.3/.gitlab-ci.yml'
  #- '0.3.4/.gitlab-ci.yml'
  #- '1.0.0/.gitlab-ci.yml'
  #- '1.0.1/.gitlab-ci.yml'
  - '1.0.2/.gitlab-ci.yml'