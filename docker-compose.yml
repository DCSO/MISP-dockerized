version: '3.1'


networks: 
  misp-backend:
    driver: bridge

services:
  ### MISP Database ###
  # LINK: https://hub.docker.com/_/mariadb/
  misp-db:
    image: mariadb:${DB_CONTAINER_VERSION}
    container_name: misp-db
    restart: always    
    volumes:
      - misp-vol-db-data:/var/lib/mysql/"
    healthcheck:
      test: ["CMD-SHELL", "mysql -u $MYSQL_USER -p$MYSQL_PASSWORD -h misp-db --execute 'show databases;'"]
      interval: 1m
      timeout: 15s
      retries: 5
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      misp-backend:
        aliases:
          - misp-db 

  ### MISP Redis Server ###
  # LINK: https://docs.docker.com/samples/library/redis/
  # LINK: https://github.com/docker-library/docs/tree/master/redis
  misp-redis:
    image: redis:${REDIS_CONTAINER_VERSION}
    restart: on-failure
    container_name: misp-redis
    command: ["redis-server", "--appendonly", "yes"] #For Data persistence
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli -h misp-redis ping) == PONG ] && exit 1"]
      interval: 1m30s
      timeout: 15s
      retries: 3
    volumes:
      - misp-vol-redis-data:/data/"
    networks:
      misp-backend:
        aliases:
          - misp-redis

  ### MISP Apache Server ###    
  misp-server:
    image: dcso/misp-server:${MISP_CONTAINER_VERSION}    
    container_name: misp-server
    depends_on:
      - "misp-db"
      - "misp-redis"
    restart: on-failure  
    tty: true
    stdin_open: true
    # ports:
    #   - "8080:80" # DEBUG only
    #   - "8443:443" # DEBUG only
    volumes:
      #- misp-vol-server-data:/var/www/
      - misp-vol-server-config:/etc/apache2/
      - misp-vol-server-logs:/var/log/apache2/
      - ./config/MISP/app-Config:/var/www/MISP/Config
      - ./config/MISP/cakeresque-config:/var/www/MISP/app/plugin/cakeresque/config/config.php
      - ./config/MISP/tmp:/var/www/MISP/tmp
      - ./config/MISP/attachments:/var/www/MISP/attachments
    networks:
      misp-backend:
        aliases:
          - misp-server

  ### Reverse Proxy ###
  # https://hub.docker.com/_/nginx/
  misp-proxy:
    image: dcso/misp-proxy:${PROXY_CONTAINER_VERSION}
    container_name: misp-proxy
    depends_on:
      - "misp-server"
    restart: on-failure
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"    
    volumes:
      - misp-vol-proxy-data:/etc/nginx/conf.d/
      - misp-vol-proxy-logs:/var/log/nginx/misp-server/
    networks:
      misp-backend:
        aliases:
          - misp-nginx

  misp-robot:
    image: dcso/misp-robot:${ROBOT_CONTAINER_VERSION}
    container_name: misp-robot
    depends_on:
      - "misp-db"
      - "misp-redis"
      - "misp-server"
      - "misp-proxy"
    tty: true
    stdin_open: true
    healthcheck:
      disable: true
    volumes:
      # add docker.sock:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Make sure its always read only!
      # add Volumes:
      - misp-vol-server-data:/srv/misp-server/
      - misp-vol-proxy-data:/srv/misp-proxy/
      - misp-vol-server-config:/srv/apache-config/
      # add Folder from Host:
      - myHOST_PATH:/srv/misp-dockerized  # Host github Repository
    networks:
      misp-backend:
        aliases:
          - misp-robot


volumes:
  misp-vol-server-logs:
  misp-vol-server-data:
  misp-vol-server-config:
  misp-vol-db-data:
  misp-vol-redis-data:
  misp-vol-proxy-data:
  misp-vol-proxy-logs: