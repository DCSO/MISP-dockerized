version: '3.1'


networks: 
  misp-backend:
    driver: bridge
    driver_opts:
     com.docker.network.bridge.name: "mispbr0"
     com.docker.network.enable_ipv6: "false"
    #internal: true
    ipam:
      config:
      - subnet: "192.168.47.0/28"

services:
  # ### MISP Database ###
  # # LINK: https://hub.docker.com/_/mariadb/
  # misp-db:
  #   image: mariadb:10.3.5
  #   container_name: misp-db
  #   restart: always    
  #   volumes:
  #   #- misp-vol-db-data:/var/lib/mysql/"
  #   healthcheck:
  #     test: ["CMD-SHELL", "mysql -u $MYSQL_USER -p$MYSQL_PASSWORD -h misp-db --execute 'show databases;'"]
  #     interval: 1m
  #     timeout: 15s
  #     retries: 5
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #   networks:
  #     misp-backend:
  #       aliases:
  #       - misp-db 

  # ### MISP Redis Server ###
  # # LINK: https://docs.docker.com/samples/library/redis/
  # # LINK: https://github.com/docker-library/docs/tree/master/redis
  # misp-redis:
  #   image: redis:3.2.11
  #   restart: on-failure
  #   container_name: misp-redis
  #   command: ["redis-server", "--appendonly", "yes"] #For Data persistence
  #   healthcheck:
  #     test: ["CMD-SHELL", "[ $$(redis-cli -h misp-redis ping) == PONG ] && exit 1"]
  #     interval: 1m30s
  #     timeout: 15s
  #     retries: 3
  #   volumes:
  #   - misp-vol-redis-data:/data/
  #   networks:
  #     misp-backend:
  #       aliases:
  #       - misp-redis
  
  ### Postfix ###
  misp-postfix:
    image: dcso/misp-dockerized-postfix:${POSTFIX_CONTAINER_TAG}
    container_name: misp-postfix
    restart: on-failure
    environment:
      HOSTNAME: ${HOSTNAME}
      DOMAIN: ${DOMAIN}
      SENDER_ADDRESS: ${SENDER_ADDRESS}
      RELAYHOST: ${RELAYHOST}
      RELAY_USER: ${RELAY_USER}
      RELAY_PASSWORD: ${RELAY_PASSWORD}
      DOCKER_NETWORK: ${DOCKER_NETWORK}
      DEBUG_PEER: ${DEBUG_PEER}
    networks:
      misp-backend:
        aliases:
          - misp-postfix

  ### MISP Apache Server ###    
  misp-server:
    image: dcso/misp-dockerized-server:${MISP_CONTAINER_TAG}
    container_name: misp-server
    depends_on:
      - "misp-postfix"
    restart: on-failure  
    tty: true
    stdin_open: true
    # ports:
    #   - "8080:80" # DEBUG only
    #   - "8443:443" # DEBUG only
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_HOST: ${HOSTNAME}
      #SENDER_ADDRESS: ${SENDER_ADDRESS}
      #CMD_MYSQL: mysqld
      #CMD_APACHE:
      #CMD_REDIS: redis-server --appendonly yes
    volumes:
    # DB
    - misp-vol-db-data:/var/lib/mysql/
    # Apache2 Configuration
    - misp-vol-server-apache2-config-sites-enabled:/etc/apache2/sites-enabled:ro
    # NGINX SSL 
    - misp-vol-ssl:/etc/apache2/ssl:ro
    # Volume with PGP Key
    - misp-vol-pgp:/var/www/MISP/.gnupg
    # Volume with S/MIME Certificate and Key
    - misp-vol-smime:/var/www/MISP/.smime
    # Redis Volume
    - misp-vol-redis-data:/redis_data_dir
    # MISP Configurations:
    - misp-vol-server-MISP-app-Config:/var/www/MISP/app/Config
    - misp-vol-server-MISP-cakeresque-config:/var/www/MISP/app/Plugin/CakeResque/Config
    - misp-vol-server-MISP-tmp:/var/www/MISP/tmp
    - misp-vol-server-MISP-attachments:/var/www/MISP/attachments
    networks:
      misp-backend:
        aliases:
        - misp-server

  ### Reverse Proxy ###
  misp-proxy:
    image: dcso/misp-dockerized-proxy:${PROXY_CONTAINER_TAG}
    container_name: misp-proxy
    depends_on:
      - "misp-server"
    restart: on-failure
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"    
    volumes:
      # NGINX Configuration
      - misp-vol-proxy-conf:/etc/nginx/conf.d:ro
      # SSL 
      - misp-vol-ssl:/etc/nginx/ssl:ro
    networks:
      misp-backend:
        aliases:
          - misp-nginx

  ### Robot ###
  misp-robot:
    image: dcso/misp-dockerized-robot:${ROBOT_CONTAINER_TAG}
    container_name: misp-robot
    depends_on:
      - "misp-server"
      - "misp-proxy"
    tty: true
    stdin_open: true
    healthcheck:
      disable: true
    volumes:
    # Docker.sock File
    - /var/run/docker.sock:/var/run/docker.sock:ro
    # Github Repository
    - /home/max/repos/MISP-dockerized:/srv/MISP-dockerized  
    - /home/max/repos/MISP-dockerized:/srv/misp-dockerized
    # Ansible scripts
    - /home/max/repos/MISP-dockerized/playbooks:/etc/ansible/playbooks/robot-playbook:ro
    # Bash scripts
    - /home/max/repos/MISP-dockerized/scripts:/srv/scripts:ro
    # Volume with Certificates
    - misp-vol-ssl:/srv/misp-ssl
    # Volume with PGP Key
    - misp-vol-pgp:/srv/misp-pgp
    # Volume with S/MIME Certificate and Key
    - misp-vol-smime:/srv/misp-smime
    # mips-server
    - misp-vol-server-apache2-config-sites-enabled:/srv/misp-server/apache2/sites-enabled
    - misp-vol-server-MISP-app-Config:/srv/misp-server/MISP/Config
    - misp-vol-server-MISP-cakeresque-config:/srv/misp-server/MISP/CakeResque/Config
    - misp-vol-server-MISP-tmp:/srv/misp-server/MISP/tmp
    - misp-vol-server-MISP-attachments:/srv/misp-server/MISP/attachments
    # misp-proxy
    - misp-vol-proxy-conf:/srv/misp-proxy/conf.d
    # misp-redis
    - misp-vol-redis-data:/srv/misp-redis
    # misp-db
    - misp-vol-db-data:/srv/misp-db
    networks:
      misp-backend:
        aliases:
          - misp-robot

### VOLUMES ###
volumes:
  misp-vol-ssl:
  misp-vol-pgp:
  misp-vol-smime:
  misp-vol-db-data:
  misp-vol-redis-data:
  misp-vol-server-logs:
  misp-vol-server-apache2-config-sites-enabled:
  misp-vol-server-MISP-app-Config:
  misp-vol-server-MISP-cakeresque-config:
  misp-vol-server-MISP-tmp:
  misp-vol-server-MISP-attachments:
  misp-vol-proxy-conf:
