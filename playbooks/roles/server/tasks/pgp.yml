- name: PGP | check if PGP public file  exists
  tags: pgp
  stat: 
    path: "{{MAIN_REPO_CONFIG}}/pgp/{{PGP_PUBLIC_FILENAME}}"
  register: public_file

- name: PGP | check if PGP private file exists
  tags: pgp
  stat: 
    path: "{{MAIN_REPO_CONFIG}}/pgp/{{PGP_PRIVATE_FILENAME}}"
  register: private_file


################
# IMPORT PGP Keys
################
- name: PGP | Import Private and Public Key
  shell:
    gpg --import --homedir "{{PGP_HOMEDIR}}" "{{PGP_PUBLIC_FILENAME}}"
    gpg --import --homedir $HOMEDIR "{{PGP_PRIVATE_FILENAME}}"
  when: (public_file.stat.exists == True) and (private_file.stat.exists == True)  

###############
# CREATE A NEW PGP KEys
###############

- name: PGP | Copy Template gen_pgp.sh script
  template:
    src: template/{{ item }}.j2
    dest: "/{{ item }}"
    owner: root
    group: root
    mode: 0740
  with_items:
    - gen_pgp.sh


- name: PGP | Generate a more high entropy - This can take a long time, so take a break and enjoy a cup of tea or coffee.] ***
  shell: rngd -r /dev/urandom
  when: (public_file.stat.exists == False) and (private_file.stat.exists == False)  


- name: PGP | Generate a new Private and Public Key
  shell: cd "{{PGP_HOMEDIR}}"; /gen_pgp.sh    
  when: (public_file.stat.exists == False) and (private_file.stat.exists == False)  


# - name: PGP | Delete gen_pgp.sh script
#   file:
#     state: absent
#     path: /gen_pgp.sh  

